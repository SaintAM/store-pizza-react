import React, { useContext, useEffect, useRef } from "react";
import { useDispatch, useSelector } from "react-redux";
import { SearchContext } from "../App";
import qs from "qs";
import { useNavigate } from "react-router-dom";

import Categories from "../components/Categories";
import Sort, { sortList } from "../components/Sort";
import PizzaBlock from "../components/PizzaBlock";
import Skeleton from "../components/PizzaBlock/Skeleton";
import Pagination from "../components/Pagination";

import { selectFilter, setFilters } from "../redux/slices/filterSlice";
import { fetchPizzas, selectPizza } from "../redux/slices/pizzaSlice";

const Home = () => {
    const isSearch = useRef(false);
    const isMounted = useRef(false);

    const navigate = useNavigate();

    const { searchValue } = useContext(SearchContext);
    //redux
    const dispatch = useDispatch();
    const { categoryId, sort, currentPage } = useSelector(selectFilter);
    const { items, status } = useSelector(selectPizza);

    const getPizzas = async () => {
        const sortBy = sort.sortProperty.replace("-", "");
        const order = sort.sortProperty.includes("-") ? "asc" : "desc";
        const category = categoryId > 0 ? `category=${categoryId}` : "";
        const search = searchValue ? `&search=${searchValue}` : "";

        dispatch(fetchPizzas({ category, currentPage, sortBy, order, search }));
    };

    useEffect(() => {
        window.onbeforeunload = () => window.scrollTo(0, 0);
        // –ï—Å–ª–∏ –±—ã–ª –ø–µ—Ä–≤—ã–π —Ä–µ–Ω–¥–µ—Ä(isSearch) –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∑–∞ –¥–∞–Ω–Ω—ã–º–∏
        if (!isSearch.current) getPizzas();
        // –≤ –¥—Ä—É–≥–æ–º useEffect isSearch - —Å—Ç–∞–Ω–µ—Ç true –∏ —ç—Ç–æ—Ç useEffect –Ω–µ –ø–µ—Ä–µ—Ä–µ—Å—É–µ—Ç—Å—è
        // –∏ –ø–æ—Å–ª–µ —ç—Ç–æ–≥–æ isSearch —Å–Ω–æ–≤–∞ false
        isSearch.current = false;
    }, [sort.sortProperty, categoryId, searchValue, currentPage]);

    useEffect(() => {
        // ***isMounted - false –Ω–µ –±—ã–ª–æ –ø–µ—Ä–≤–æ–≥–æ —Ä–µ–Ω–¥–µ—Ä–∞ –∏ –º—ã –Ω–µ –ø–∞—Ä—Å–∏–º –¥–∞–Ω–Ω—ã–µ –≤ —Å—Ç—Ä–æ–∫—É URL
        if (isMounted.current) {
            // –ë–µ—Ä–µ–º –≤—Å–µ –Ω–∞—à–∏ –∞–∫—Ç—É–∞–ª—å—ã–µ –¥–∞–Ω–Ω—ã–µ —Å —Ä–µ–¥–∞–∫—Å–∞, –∏ –ø—Ä–µ–≤—Ä–∞—â–∞–µ–º –≤ —Å—Ç—Ä–æ–∫—É
            const queryString = qs.stringify({
                sort: sort.sortProperty,
                categoryId,
                currentPage,
            });
            // –ò –ø–µ—Ä–µ–¥–∞–µ–º –µ–µ –≤ –∞–¥—Ä–µ—Å–Ω—É—é —Å—Ç—Ä–æ–∫—É URL
            navigate(`?${queryString}`);
        }
        // ***isMounted - true  –±—ã–ª –ø–µ—Ä–≤—ã–π —Ä–µ–Ω–¥–µ—Ä, —Å–ª–µ–¥. —Ä–∞–∑ –∫–æ–¥ –≤—ã—à–µ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç ^
        isMounted.current = true;
    }, [sort.sortProperty, categoryId, currentPage]);

    useEffect(() => {
        //–ï—Å–ª–∏ –≤ –∞–¥—Ä–µ—Å–Ω–æ–π —Å—Ç—Ä–æ–∫–µ –µ—Å—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
        if (window.location.search) {
            //–¢–æ –º—ã –∏—Ö –¥–æ—Å—Ç–∞–µ–º (—Å—Ç—Ä–æ—á–∫—É), –ø—Ä–µ–≤—Ä–∞—â–∞–µ–º –≤ –æ–±—ä–µ–∫—Ç –∏ –≤—ã—Ä–µ–∑–∞–µ–º "?" - substring
            const params = qs.parse(window.location.search.substring(1));
            // —á—Ç–æ –±—ã –ø–µ—Ä–µ–¥–∞—Ç—å sort (–∫–æ—Ç–æ—Ä—ã–π –æ–±—ä–µ–∫—Ç) –≤ —Ä–µ–¥–∞–∫—Å, –¥–µ–ª–∞–µ–º —Å–ª–µ–¥—É—é—â–µ–µ:
            const sort = sortList.find(
                (obj) => obj.sortProperty === params.sort
            );
            // –ò –ø–µ—Ä–µ–¥–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –∞–¥—Ä–µ—Å–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ –≤ —Ä–µ–¥–∞–∫—Å —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            dispatch(
                setFilters({
                    ...params,
                    sort,
                })
            );
            // –¥–µ–ª–∞–µ–º (isSearch) - true —á—Ç–æ–±—ã –ø–æ–≤—Ç–æ—Ä–Ω–æ –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏—Å—å fetchPizzas –¥–∞–Ω–Ω—ã–µ
            isSearch.current = true;
        }
    }, []);

    const pizzas = items.map((obj) => <PizzaBlock key={obj.id} {...obj} />);
    const skeletons = [...new Array(6)].map((_, i) => <Skeleton key={i} />);

    return (
        <>
            <div className="content__top">
                <Categories />
                <Sort />
            </div>
            <h2 className="content__title">–í—Å–µ –ø–∏—Ü—Ü—ã</h2>
            {status === "failed" ? (
                <div className="content__fail">
                    <h2>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞</h2>
                    <p>
                        –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –ø–∏—Ç—Ç—Å—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ãüò¢
                        <br /> –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–∂–µ!
                    </p>
                </div>
            ) : (
                <div className="content__items">
                    {status === "pending" ? skeletons : pizzas}
                </div>
            )}

            <Pagination value={currentPage} />
        </>
    );
};

export default Home;
